

services:
  # Laravel Application (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: dopacheck/app:latest
    container_name: dopacheck_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Laravel
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_URL: ${APP_URL:-http://localhost:8000}
      
      # Database
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-dopacheck}
      DB_USERNAME: ${DB_USERNAME:-dopacheck_user}
      DB_PASSWORD: ${DB_PASSWORD:-dopacheck_pass}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # Evolution API
      EVOLUTION_API_URL: http://evolution-api:8080
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY:-evolution_api_key_123}
      
      # Queue
      QUEUE_CONNECTION: redis
      HORIZON_PREFIX: dopacheck
    volumes:
      - ./storage:/app/storage
      - ./bootstrap/cache:/app/bootstrap/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      evolution-api:
        condition: service_healthy
    networks:
      - dopacheck-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database (shared by Laravel and Evolution API)
  postgres:
    image: postgres:15-alpine
    container_name: dopacheck_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-dopacheck_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dopacheck_pass}
      POSTGRES_DB: ${DB_DATABASE:-dopacheck}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dopacheck-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-dopacheck_user} -d ${DB_DATABASE:-dopacheck}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (shared by Laravel queues and Evolution API)
  redis:
    image: redis:7-alpine
    container_name: dopacheck_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - dopacheck-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server /etc/redis/redis.conf --appendonly yes

  # Evolution API (WhatsApp Gateway)
  evolution-api:
    image: atendai/evolution-api:v2.2.3
    container_name: dopacheck_evolution
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: "postgresql"
      DATABASE_CONNECTION_URI: "postgresql://${DB_USERNAME:-dopacheck_user}:${DB_PASSWORD:-dopacheck_pass}@postgres:5432/evolution?schema=public"
      DATABASE_CONNECTION_CLIENT_NAME: "evolution_exchange"
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "true"
      DATABASE_SAVE_DATA_HISTORIC: "true"
      CONFIG_SESSION_PHONE_VERSION: "2.3000.1023204200"

      # Redis
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: "redis://redis:6379"
      CACHE_REDIS_PREFIX_KEY: "evolution"
      CACHE_REDIS_SAVE_INSTANCES: "false"
      CACHE_LOCAL_ENABLED: "false"

      # Server
      SERVER_TYPE: "http"
      SERVER_PORT: 8080
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PUT,DELETE"
      CORS_CREDENTIALS: "true"

      # Webhooks
      WEBHOOK_GLOBAL_URL: "http://app:8000/api/webhooks/evolution"
      WEBHOOK_GLOBAL_ENABLED: "true"
      WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS: "false"

      # Instances
      DEL_INSTANCE: "false"
      PROVIDER_HOST: "http://localhost:8080"
      PROVIDER_PORT: "8080"

      # Authentication
      AUTHENTICATION_TYPE: "apikey"
      AUTHENTICATION_API_KEY: ${EVOLUTION_API_KEY:-evolution_api_key_123}
      AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES: "true"

      # Logs
      LOG_LEVEL: "ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS"
      LOG_COLOR: "true"
      LOG_BAILEYS: "error"
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - dopacheck-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Laravel Horizon (Queue Worker)
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dopacheck_horizon
    restart: unless-stopped
    working_dir: /app
    environment:
      # Laravel
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      
      # Database
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-dopacheck}
      DB_USERNAME: ${DB_USERNAME:-dopacheck_user}
      DB_PASSWORD: ${DB_PASSWORD:-dopacheck_pass}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # Queue
      QUEUE_CONNECTION: redis
      HORIZON_PREFIX: dopacheck
    volumes:
      - ./storage:/app/storage
      - ./bootstrap/cache:/app/bootstrap/cache
    command: php artisan horizon
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dopacheck-net
    healthcheck:
      test: ["CMD", "php", "artisan", "horizon:status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin (Database Management - Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dopacheck_pgadmin
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@dopacheck.com.br}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - dopacheck-net
    profiles:
      - tools  # Use: docker-compose --profile tools up

volumes:
  postgres_data:
  redis_data:
  evolution_instances:
  evolution_store:
  pgadmin_data:

networks:
  dopacheck-net:
    driver: bridge